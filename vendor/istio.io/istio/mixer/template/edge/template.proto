// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

// $title: Edge
// $description: A template designed to report observed communication edges between workloads.
// $location: https://istio.io/docs/reference/config/policy-and-telemetry/templates/edge.html

// The `edge` template represents an edge in the mesh graph.
package edge;

import "policy/v1beta1/type.proto";
import "mixer/adapter/model/v1beta1/extensions.proto";

option (istio.mixer.adapter.model.v1beta1.template_variety) = TEMPLATE_VARIETY_REPORT;

// The `edge` template represents an edge in the mesh graph
//
// When writing the configuration, the value for the fields associated
// with this template can either be a literal or an
// [expression](https://istio.io/docs/reference/config/policy-and-telemetry/expression-language/). Please
// note that if the datatype of a field is not
// istio.mixer.adapter.model.v1beta1.Value, then the expression's
// [inferred type](https://istio.io/docs/reference/config/policy-and-telemetry/expression-language/#type-checking)
// must match the datatype of the field.
//
// Example config:
// ```yaml
// apiVersion: "config.istio.io/v1alpha2"
// kind: edge
// metadata:
//   name: default
//   namespace: istio-system
// spec:
//   timestamp: request.time
//   sourceUid: source.uid | "Unknown"
//   sourceOwner: source.owner | "Unknown"
//   sourceWorkloadName: source.workload.name | "Unknown"
//   sourceWorkloadNamespace: source.workload.namespace | "Unknown"
//   destinationUid: destination.uid | "Unknown"
//   destinationOwner: destination.owner | "Unknown"
//   destinationWorkloadName: destination.workload.name | "Unknown"
//   destinationWorkloadNamespace: destination.workload.namespace | "Unknown"
//   destinationServiceName: destination.service.name | "Unknown"
//   destinationServiceNamespace: destination.service.namespace | "Unknown"
//   apiProtocol: api.protocol | "Unknown"
//   contextProtocol: context.protocol | "Unknown"
// ```
message Template {

  // Timestamp of the edge
  istio.policy.v1beta1.TimeStamp timestamp = 1;

  // Namespace of the source workload
  string source_workload_namespace = 10;

  // Name of the source workload
  string source_workload_name = 11;

  // Owner of the source workload (often k8s deployment)
  string source_owner = 12;

  // UID of the source workload
  string source_uid = 13;

  // Namespace of the destination workload
  string destination_workload_namespace = 20;

  // Name of the destination workload
  string destination_workload_name = 21;

  // Owner of the destination workload (often k8s deployment)
  string destination_owner = 22;

  // UID of the destination workload
  string destination_uid = 23;

  // Namespace of the destination Service
  string destination_service_namespace = 24;

  // Name of the destination Service
  string destination_service_name = 25;

  // Protocol used for communication (http, tcp)
  string context_protocol = 30;

  // The protocol type of the API call (http, https, grpc)
  string api_protocol = 31;
}
