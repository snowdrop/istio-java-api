package ${model.packageName};

import java.util.HashMap;
import java.util.Map;
import javax.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import lombok.EqualsAndHashCode;
import lombok.ToString;

import io.fabric8.kubernetes.api.model.ObjectMeta;
import io.fabric8.kubernetes.model.annotation.Group;
import io.fabric8.kubernetes.model.annotation.Plural;
import io.fabric8.kubernetes.model.annotation.Version;

import io.sundr.builder.annotations.Buildable;
import io.sundr.builder.annotations.Inline;

import me.snowdrop.istio.api.IstioResource;
import me.snowdrop.istio.api.internal.IstioApiVersion;
import me.snowdrop.istio.api.internal.IstioKind;



#set ($spec = $model.name)
#set ($length = $spec.length())
#set ($tindex = $length - 4)
#set ($resource = $spec.substring(0, $tindex))
#set ($status = $resource + "Status")

#set ($apiGroupAndVersion = "unknown")
#set ($version = "unknown")
#set ($group = "unknown")
#set ($plural = "unknown")
#set ($annotations = $model.annotations)

#foreach ($annotation in $annotations)
    #set ($annotationName = $annotation.getClassRef().getName())

    #if ($annotationName.equals("IstioApiVersion"))
        #set ($apiGroupAndVersion = $annotation.getParameters().get("value"))
    #end
    #if ($annotationName.endsWith("Version"))
        #set ($version = $annotation.getParameters().get("value"))
    #end
    #if ($annotationName.equals("Group"))
        #set ($group = $annotation.getParameters().get("value"))
    #end
#end

#set ($kind = "$resource")
#set ($plural = "$kind" + "s")
#foreach ($annotation in $annotations)
    #if ($annotation.getClassRef().getName().equals("IstioKind"))
        #set ($kind = $annotation.getParameters().get("name"))
        #set ($plural = $annotation.getParameters().get("plural"))
    #end
#end
/**
 *
 *
 */
@IstioKind(name = "$kind", plural = "$plural")
@IstioApiVersion("$apiGroupAndVersion")
@Group("$group")
@Version("$version")
@Plural("$plural")
@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated("org.jsonschema2pojo")
@JsonPropertyOrder({
"apiVersion",
"kind",
"metadata",
"spec",
"status"
})
@JsonDeserialize(using = com.fasterxml.jackson.databind.JsonDeserializer.None.class)
@ToString
@EqualsAndHashCode
@Buildable(editableEnabled = false, generateBuilderPackage = true, builderPackage = "io.fabric8.kubernetes.api.builder" )
public class $resource implements IstioResource {

    /**
     *
     * (Required)
     *
     */
    @JsonProperty("apiVersion")
    private String apiVersion = "$apiGroupAndVersion";
    /**
     *
     * (Required)
     *
     */
    @JsonProperty("kind")
    private String kind = "$kind";

    /**
     *
     *
     */
    @JsonProperty("metadata")
    private ObjectMeta metadata;
    /**
     *
     *
     */
    @JsonProperty("spec")
    private $spec spec;

    /**
     * No args constructor for use in serialization
     *
     */
    public $resource() {
    }

    /**
     *
     * @param metadata
     * @param apiVersion
     * @param kind
     * @param spec
     */
    public $resource(String apiVersion, String kind, ObjectMeta metadata, $spec spec) {
        this.apiVersion = apiVersion;
        this.kind = kind;
        this.metadata = metadata;
        this.spec = spec;
    }

    /**
     *
     * (Required)
     *
     * @return
     *     The apiVersion
     */
    @JsonProperty("apiVersion")
    public String getApiVersion() {
        return apiVersion;
    }

    /**
     *
     * (Required)
     *
     * @param apiVersion
     *     The apiVersion
     */
    @JsonProperty("apiVersion")
    public void setApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
    }

    /**
     *
     * (Required)
     *
     * @return
     *     The kind
     */
    @JsonProperty("kind")
    public String getKind() {
        return kind;
    }

    /**
     *
     * (Required)
     *
     * @param kind
     *     The kind
     */
    @JsonProperty("kind")
    public void setKind(String kind) {
        this.kind = kind;
    }

    /**
     *
     *
     * @return
     *     The metadata
     */
    @JsonProperty("metadata")
    public ObjectMeta getMetadata() {
        return metadata;
    }

    /**
     *
     *
     * @param metadata
     *     The metadata
     */
    @JsonProperty("metadata")
    public void setMetadata(ObjectMeta metadata) {
        this.metadata = metadata;
    }

    /**
     *
     *
     * @return
     *     The spec
     */
    @JsonProperty("spec")
    public $spec getSpec() {
        return spec;
    }

    /**
     *
     *
     * @param spec
     *     The spec
     */
    @JsonProperty("spec")
    public void setSpec($spec spec) {
        this.spec = spec;
    }
}
